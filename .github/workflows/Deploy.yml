name: Node.js CI/CD-AWS-deploy
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["21.x"]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Dependencies
      run: CI=false npm install --save
    - name: Build React App
      run: CI=false npm run build
    - name: Set Up SSH Key
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > TGW-peering.pem
        chmod 600 TGW-peering.pem
    - name: Adjust Permissions on EC2
      env:
        EC2_IP: ${{ secrets.EC2_HOST }}
      run: |
        eval $(ssh-agent -s)
        chmod 600 TGW-peering.pem
        ssh-add TGW-peering.pem
        ssh -i TGW-peering.pem ubuntu@52.91.85.194
        sudo mkdir -p /var/www/react-app
        ssh -o StrictHostKeyChecking=no -i TGW-peering.pem ubuntu@$EC2_HOST "sudo chown -R ubuntu:ubuntu /var/www/react-app"
    - name: Deploy to EC2
      env:
        EC2_IP: ${{ secrets.EC2_HOST }}
      run: |
        scp -o StrictHostKeyChecking=no -i TGW-peering.pem -r ./build ubuntu@$EC2_HOST:/var/www/react-app
    - name: Reset Permissions on EC2
      env:
        EC2_IP: ${{ secrets.EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no -i TGW-peering.pem ubuntu@$EC2_HOST "sudo chown -R www-data:www-data /var/www/react-app/build"
    - name: Install and Configure Nginx
      env:
        EC2_IP: ${{ secrets.EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no -T -i TGW-peering.pem ubuntu@$EC2_HOST <<-EOF
          sudo apt update
          sudo apt install -y nginx
          sudo systemctl start nginx
          sudo systemctl enable nginx
          sudo rm -f /etc/nginx/sites-enabled/default
          # Use escaped variables for \$uri and \$uri/ to ensure they are not expanded by the shell
          echo "server {
              listen 80;
              server_name $EC2_HOST;
              location / {
                  root /var/www/react-app/build;
                  index index.html;
                  try_files $uri $uri/ /index.html;
              }
          }" | sudo tee /etc/nginx/sites-available/react-app
          sudo ln -sf /etc/nginx/sites-available/react-app /etc/nginx/sites-enabled/
          if sudo nginx -t; then
              sudo systemctl restart nginx
              echo "Nginx is reloaded successfully"
          else
              echo "Nginx configuration error"
              exit 1
          fi
        EOF
    - name: Check Deployment
      env:
        EC2_IP: ${{ secrets.EC2_HOST }}
      run: |
        echo "Visit http://$EC2_HOST to see your deployed React application deployed."
